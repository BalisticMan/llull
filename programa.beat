void hanoi(n,ori,dst,aux)
{    # la n és un real negatiu. Canviar hg per ->
    if(n>0){hanoi(n-1,ori,aux,dst)write(ori,"hg=>->",dst)hanoi(n-1,aux,
        dst, ori
)}else{a=n-1 read(a)}}


void aux(n,ori,dst,aux)
{    # la n és un real negatiu. Canviar hg per ->
    if(n>0){while(a==3){hanoi(n-1,ori,aux,dst)write(ori,"hg",dst)hanoi(n-1,aux,
        dst, ori
)}}}

void aux2(n,ori,dst,aux)
{    # la n és un real negatiu. Canviar hg per ->
    if(n>0){for(i=2;i*i<=n;i=i+1){hanoi(n-1,ori,aux,dst)write(ori,"hg",dst)hanoi(n-1,aux,
        dst, ori
)}}}

void aux3(n,ori,dst,aux)
{    # la n és un real negatiu. Canviar hg per ->
    if(n>0){for(i=2;i*i<=n;i=i+1){array(p,i+3+(4*i))set(p, i, i*(5+3))get(p,(-2))hanoi(n-1,ori,aux,dst)write(ori,"hg",dst)hanoi(n-1,aux,
        dst, ori
)}}}

void main() {
    read(n)
    array(p, n + 1) # crea un array [0 .. n] inicialitzant totes les posicions a zero
    write(p)
    eratostenes(p, n)
    write(p)
    for (i = 2; i <= n; i = i + 1) {
        if (get(p, i) == 1) {
            write(i)
        }
    }
}

void eratostenes(p, n) {
    set(p, 0, 0)
    set(p, 1, 0)
    for (i = 2; i <= n; i = i + 1) {
        set(p, i, 1)
    }
    for (i = 2; i * i <= n; i = i + 1) {
        if (get(p, i) == 1) {
            for (j = i + i; j <= n; j = j + i) {
                set(p, j, 0)
            }
        }
    }
}